{%- if search.performed -%}

{%- render 'css', css: 'section-collection.css' -%}
{%- render 'css', css: 'component-card-product.css' -%}
{%- render 'css', css: 'component-card-text.css' -%}

{%- style -%}
  #shopify-section-{{ section.id }} > div {
    padding-block-start: calc(var(--section-spacing-unit-size) * {{ section.settings.spacing_top }});
    padding-block-end: calc(var(--section-spacing-unit-size) * {{ section.settings.spacing_bottom }});
  }
  #shopify-section-{{ section.id }} .collection__grid {
    column-gap: var(--grid-spacing);
  }
{%- endstyle -%}

{%- if section.settings.enable_filters or section.settings.enable_sorting -%}
  <script src="{{- 'facets.js' | asset_url -}}" defer="defer"></script>
{%- endif -%}

{%- if section.settings.pagination_style == 'load_more' -%}
  <script src="{{- 'collection-load-more.js' | asset_url -}}" defer="defer"></script>
  <script src="{{- 'collection-load-previous.js' | asset_url -}}" defer="defer"></script>
  {%- if section.settings.enable_infinity_scroll -%}
    <script src="{{- 'collection-infinity-scroll.js' | asset_url -}}" defer="defer"></script>
  {%- endif -%}
{%- endif -%}

{%- assign collection_color_class = 'color-' | append: section.settings.color_scheme -%}

{%- capture collection_additional_classes -%}
  {{ collection_color_class }} {{ settings.card_product_layout }}
{%- endcapture -%}

{%- liquid
  if section.settings.enable_filters or section.settings.enable_sorting or section.settings.enable_products_count or section.settings.products_per_row_ui
    render 'css', css: 'component-facets.css'

    capture facets_html
      render 'facets', results: search, enable_filtering: section.settings.enable_filters, enable_sorting: section.settings.enable_sorting, section_id: section.id, filters_shape: section.settings.filters_shape, container_width: section.settings.section_width
    endcapture
  endif

  if section.blocks.size > 0
    capture card_text_html
      for block in section.blocks
        assign card_text_classes = 'color-' | append: block.settings.color_scheme | append: ' collection__card-text js-card-text'

        if settings.product_card_media_aspect_ratio == '0'
          assign card_text_classes = card_text_classes | append: ' card-text--static'
        endif

        render 'card-text', class: card_text_classes, title: block.settings.title, button_text: block.settings.button_text, button_url: block.settings.button_url
      endfor
    endcapture
  endif

  assign card_text_html = card_text_html | strip

  if card_text_html != ''
    assign collection_additional_classes = collection_additional_classes | append: ' collection--has-card-text'
  endif
-%}

<div class="collection js-animation-fade-in {{ collection_additional_classes | strip }}">

  {{ facets_html }}

  <div class="container {{ section.settings.section_width }}">
    <div class="collection__inner">

      {%- paginate search.results by section.settings.products_per_page -%}
        {%- if search.results_count == 0 -%}
          <div class="collection-grid-container collection-grid-container--empty text-center" id="ProductGridContainer">
            <h3>
              {%- if search.terms -%}
                {{- 'search.no_results_with_terms' | t: terms: search.terms -}}<br>
              {%- else -%}
                {{- 'search.no_results' | t -}}<br>
              {%- endif -%}
            </h3>
            <p>
              {{- 'search.change_terms' | t -}}
            </p>
          </div>
        {%- else -%}
          <div class="collection-grid-container{% if section.settings.pagination_style == 'load_more' and section.settings.enable_infinity_scroll %} infinity-scroll-active{% endif %}" id="ProductGridContainer">
            {% if section.settings.pagination_style == 'load_more' and paginate.previous and paginate.pages > 1 and paginate.current_page <= paginate.pages %}
              <collection-load-previous class="text-center no-js-hidden color-{{ section.settings.color_scheme }}" data-current-page="{{- paginate.current_page -}}">
                {%- liquid
                  assign load_more_button_data_href = 'data-href="' | append: paginate.previous.url | append: '"'
                  assign load_previous_value = 'theme.actions.load_previous' | t
                  render 'button', class: 'button js-btn-load-previous', button_style: 'button--outlined', attr: load_more_button_data_href, value: load_previous_value, loading_spinner: true
                -%}
              </collection-load-previous>
            {% endif %}
            <div
              class="collection__grid{% if section.settings.products_per_row_mobile != '2' %} collection__grid-single{% endif %}"
              id="product-grid"
              data-id="{{- section.id -}}"
              data-cols="{{- section.settings.products_per_row -}}"
            >
              {%- liquid
                for result in search.results
                  case result.object_type
                    when 'product'
                      render 'card-product', product_ref: result, section_id: section.id
                    else
                      assign class = 'align-self-start '
                      assign class = class | strip
                      render 'card-result', color_scheme: section.settings.color_scheme, result: result, class: class
                  endcase
                endfor
              -%}
            </div>
            {%- if paginate.pages > 1 -%}
              {% if section.settings.pagination_style == 'load_more' %}
                <collection-load-more class="text-center no-js-hidden{% unless paginate.next %} hidden{% endunless %} color-{{ section.settings.color_scheme }}" data-current-page="{{- paginate.current_page -}}">
                  {%- liquid
                    assign load_more_button_data_href = 'data-href="' | append: paginate.next.url | append: '"'
                    assign load_more_value = 'theme.actions.load_more' | t

                    render 'button', class: 'button js-btn-load-more', button_style: 'button--outlined', attr: load_more_button_data_href, value: load_more_value, loading_spinner: true
                  -%}
                </collection-load-more>
              {% else %}
                <div class="collection__actions">
                  {%- render 'pagination', paginate: paginate, anchor: '' -%}
                </div>
              {% endif %}
            {%- endif -%}
          </div>
        {%- endif -%}
      {%- endpaginate -%}
    </div>
  </div>
</div>

{%- endif -%}

{% schema %}
{
  "name": "t:sections.main-search.name",
  "tag": "section",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.global.header.general.content"
    },
    {
      "type": "checkbox",
      "id": "enable_products_count",
      "label": "t:sections.main-collection.settings.enable_products_count.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "label": "t:sections.main-collection.settings.enable_sorting.label",
      "info": "t:sections.main-collection.settings.enable_sorting.info",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_filters",
      "label": "t:sections.main-collection.settings.enable_filters.label",
      "info": "t:sections.main-collection.settings.enable_filters.info",
      "default": true
    },
    {
      "type": "select",
      "id": "filters_shape",
      "label": "t:sections.main-collection.settings.filters_shape.label",
      "options": [
        {
          "value": "rounded",
          "label": "t:sections.main-collection.settings.filters_shape.options.option_1.label"
        },
        {
          "value": "squared",
          "label": "t:sections.main-collection.settings.filters_shape.options.option_2.label"
        }
      ],
      "default": "rounded"
    },
    {
      "type": "header",
      "content": "t:sections.global.header.products_grid.content"
    },
    {
      "type": "select",
      "id": "products_per_row",
      "label": "t:sections.main-collection.settings.products_per_row.label",
      "options": [
        {
          "value": "3",
          "label": "3"
        },
        {
          "value": "4",
          "label": "4"
        }
      ],
      "default": "4"
    },
    {
      "type": "select",
      "id": "products_per_row_mobile",
      "label": "t:sections.main-collection.settings.products_per_row_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "2"
    },
    {
      "type": "range",
      "id": "products_per_page",
      "min": 12,
      "max": 50,
      "step": 1,
      "label": "t:sections.main-collection.settings.products_per_page.label",
      "default": 16
    },
    {
      "type": "select",
      "id": "pagination_style",
      "label": "t:sections.global.pagination.style.label",
      "options": [
        {
          "value": "default",
          "label": "t:sections.global.pagination.style.options.default.label"
        },
        {
          "value": "load_more",
          "label": "t:sections.global.pagination.style.options.load_more.label"
        }
      ],
      "default": "default"
    },
    {
      "type": "checkbox",
      "id": "enable_infinity_scroll",
      "label": "t:sections.global.pagination.enable_infinity_scroll.label",
      "info": "t:sections.global.pagination.enable_infinity_scroll.info",
      "default": false
    },
    {
      "type": "header",
      "content": "t:sections.global.header.settings.content",
      "info": "t:sections.global.header.settings.info"
    },
    {
      "type": "select",
      "id": "section_width",
      "options": [
        {
          "value": "max-w-page",
          "label": "t:sections.global.settings.section_width.options__1.label"
        },
        {
          "value": "max-w-fluid",
          "label": "t:sections.global.settings.section_width.options__2.label"
        }
      ],
      "default": "max-w-page",
      "label": "t:sections.global.settings.section_width.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "default": "scheme-1",
      "label": "t:sections.global.color_scheme.label"
    },
    {
      "type": "select",
      "id": "spacing_top",
      "label": "t:sections.global.settings.spacing.settings.spacing_top.label",
      "options": [
        {
          "value": "0",
          "label": "No"
        },
        {
          "value": "1",
          "label": "S"
        },
        {
          "value": "2",
          "label": "M"
        },
        {
          "value": "4",
          "label": "L"
        },
        {
          "value": "6",
          "label": "XL"
        }
      ],
      "default": "0"
    },
    {
      "type": "select",
      "id": "spacing_bottom",
      "label": "t:sections.global.settings.spacing.settings.spacing_bottom.label",
      "options": [
        {
          "value": "0",
          "label": "No"
        },
        {
          "value": "1",
          "label": "S"
        },
        {
          "value": "2",
          "label": "M"
        },
        {
          "value": "4",
          "label": "L"
        },
        {
          "value": "6",
          "label": "XL"
        }
      ],
      "default": "2"
    }
  ]
}
{% endschema %}
