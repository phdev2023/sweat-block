{% comment %}
  Renders a product card
  Accepts:
  - product_ref: {Object} Product Liquid object
  - section_id: {String} Section id
  - block_index: {Number} Block index for unique id
  Usage:
  {%- render 'card-product', product_ref: product_ref, section_id: section.id, block_index: block_index  -%}
{% endcomment %}

{% comment %} Product Media {% endcomment %}

{%- liquid
  assign image_per_view = image_per_view | default: 4
  assign is_small = is_small | default: false

  assign search_product = search_product | default: false
  assign is_in_drawer = is_in_drawer | default: false
  assign product_images = product_ref.variants | map: 'featured_image' | uniq

  assign variants_display_desktop = settings.product_card_variants_display_desktop
  assign variants_display_mobile = settings.product_card_variants_display_mobile

  assign variants_display_limit = settings.product_card_variants_display_limit | default: 3

  assign show_variants = show_variants | default: true

  assign product_title_placeholder = 'product.label' | t
-%}

{%- capture media -%}
  {% comment %} Variables | Product Media {% endcomment %}
  {%- assign media_classes = "product-card__media" -%}
  {%- if settings.product_card_media_hover and product_ref.gift_card? == false -%}
    {%- assign media_classes = media_classes | append: ' product-card__media--hoverable' -%}
  {%- endif -%}

  {% comment %} Styles | Product Media {% endcomment %}
  <style>
    .product-card__media {
      --product-card-media-aspect-ratio: {{ settings.product_card_media_aspect_ratio }};
      --product-card-media-object-fit: {{ settings.product_card_media_object_fit }};
    }
  </style>

  {% comment %} Render | Product Media {% endcomment %}
  <div
    class="{{ media_classes }}"
    data-update-media="{% if product_ref.first_available_variant == product_ref.selected_variant %}true{% else %}false{% endif %}"
  >
    {% liquid
      assign hover_media = product_ref.media[1]

      if hover_media.media_type == 'video' or hover_media.media_type == 'external_video'
        assign hover_media = product_ref.media[2]
      endif

      if product_ref.featured_image
        if product_images.size > 1 and variants_display_desktop != 'none' or variants_display_mobile != 'none'
          for product_image in product_images
            if product_image != blank
              assign data_product_images = ''
              for variant in product_ref.variants
                if variant.featured_image == product_image
                  assign data_product_images = data_product_images | append: variant.id | append: ','
                endif
              endfor
              assign data_product_images = data_product_images | split: ',' | uniq | join: ','
              if data_product_images != ""
                assign attr = 'data-product-images="' | append: data_product_images | append: '"'
              endif

              # check if variant has a featured image or use first image to display default
              assign image_render_condition = false
              if product_ref.selected_or_first_available_variant.featured_image and product_ref.selected_or_first_available_variant.featured_image.id == product_image.id
                assign image_render_condition = true
              elsif product_ref.selected_or_first_available_variant.featured_image == nil and forloop.first
                assign image_render_condition = true
              endif

              unless image_render_condition
                render 'image', image: product_image, attr: attr, class: 'hidden smooth-lazy-disabled', image_per_view: image_per_view
              else
                render 'image', image: product_image, attr: attr, image_per_view: image_per_view, loading: 'eager'
              endunless
            endif
          endfor
        else
          render 'image', image: product_ref.featured_image, image_per_view: image_per_view, loading: 'eager'
        endif

        if settings.product_card_media_hover and product_ref.media.size > 1 and hover_media != nil
          render 'image', image: hover_media, alt: hover_media.alt | default: product_ref.title, class: 'hover-img smooth-lazy-disabled', image_per_view: image_per_view
        endif
      else
        echo 'product-1' | placeholder_svg_tag: 'placeholder-svg'
      endif
    %}
  </div>
{%- endcapture -%}

{% comment %} Product Add-To-Cart Button {% endcomment %}
{%- capture add_to_cart_button -%}
  {%- if settings.product_card_enable_quick_add_to_cart_button or settings.product_card_enable_single_add_to_cart_button -%}
    {% comment %} Variables | Product Add-To-Cart Button {% endcomment %}
    {%- assign button_classes = 'button product-card__add-to-cart--button color-' | append: settings.product_card_action_buttons_color_scheme | append: ' ' -%}
    {% if is_small %}
      {% assign button_classes = button_classes | append: 'product-card-small__button ' %}
    {% endif %}
    {%- if settings.product_card_add_to_cart_btn_content == 'icon' -%}
      {%- assign button_classes = button_classes | append: 'button--icon' -%}
      {%- if settings.button_border_radius == '0' -%}
        {%- assign button_classes = button_classes | append: ' button--rounded-0' -%}
      {%- endif -%}
    {%- else -%}
      {%- assign button_classes = button_classes | append: 'button--uppercase button--filled' -%}
    {%- endif -%}

    {%- capture button_content -%}
      {%- assign button_label = '' -%}
      {%- if product_ref.variants.size == 1 -%}
        {%- assign button_label = 'theme.actions.add_to_cart' | t  -%}
      {%- elsif product_ref.variants.size > 1  -%}
        {%- assign button_label = 'product.choose_options' | t  -%}
      {%- endif -%}
      {%- if settings.product_card_add_to_cart_btn_content contains 'icon' -%}
        {% render 'icon', icon_name: 'theme-plus' %}
      {%- endif -%}
      {%- if settings.product_card_add_to_cart_btn_content contains 'text' -%}
        <span>{{- button_label -}}</span>
      {%- else -%}
        <span class="visually-hidden">{{- button_label -}}</span>
      {%- endif -%}
    {%- endcapture -%}

    {% comment %} Render | Product Add-To-Cart Button {% endcomment %}
    {%- if product_ref.variants.size == 1 and settings.product_card_enable_single_add_to_cart_button -%}
      <button
        type="submit"
        class="{{ button_classes }}"
        {%- unless product_ref.available -%}disabled{%- endunless -%}
      >
        {{- button_content -}}
      </button>
    {%- endif -%}
    {%- if product_ref.variants.size > 1 and settings.product_card_enable_quick_add_to_cart_button -%}
      <button
        type="button"
        class="quick-cart-drawer__trigger {{ button_classes }}"
        tabindex="{% if is_in_drawer == true %}-1{% else %}0{% endif %}"
        aria-expanded="false"
        aria-controls="quick-cart-drawer"
        data-product-url="{{- product_ref.handle | prepend: '/products/'  -}}"
        {%- unless product_ref.available -%}disabled{%- endunless -%}
      >
        {{- button_content -}}
        <div class="quick-cart-drawer__trigger--loading">
          {%- render 'loading-spinner' -%}
        </div>
      </button>
    {%- endif -%}
  {%- endif -%}
{%- endcapture -%}

{% comment %} Product Add-To-Cart Form {% endcomment %}
{%- capture add_to_cart -%}
  {%- if product_ref.available -%}
    {%- capture variant_id_input -%}
      <input type='hidden' name='id' value='{{- product_ref.selected_or_first_available_variant.id -}}'>
    {%- endcapture -%}

    {%- if product_ref.variants.size == 1 and settings.product_card_enable_single_add_to_cart_button -%}
      {% comment %} Render | Product Add-To-Cart Form {% endcomment %}
      <form class="product-card__add-to-cart--form">
        {{ variant_id_input }}
        <input type='hidden' name='quantity' value='1'>
        {{ add_to_cart_button }}
      </form>
    {%- else -%}
      {{ variant_id_input }}
    {%- endif -%}
    {%- if product_ref.variants.size > 1 and settings.product_card_enable_quick_add_to_cart_button -%}
      {{ add_to_cart_button }}
    {%- endif -%}
  {%- endif -%}
{%- endcapture -%}

{% comment %} Product Variants || Options || Swatches {% endcomment %}
{%- capture product_variants -%}
  {%- if product_ref.available and variants_display_desktop != 'none' or variants_display_mobile != 'none' -%}
    {% comment %} Variables | Product Swatches {% endcomment %}
    {%- capture color_codes -%}{% render 'color-codes-to-check' %}{%- endcapture -%}
    {%- assign swatch_options = settings.swatches_option | split: ',' -%}
    {%- assign current_swatch_options = '' -%}
    {%- for swatch_opt in swatch_options -%}
      {%- assign swatch_opt_striped = swatch_opt | strip -%}
      {%- assign swatch_option = product_ref.options_by_name[swatch_opt_striped].values | join: ',' -%}
      {%- assign current_swatch_options = current_swatch_options | append: swatch_option | append: ',' -%}
    {%- endfor -%}
    {%- assign current_swatch_options = current_swatch_options | split: ','-%}

    {% comment %} Check for variant priorty  {% endcomment %}
    {% assign swatches_option_array = settings.swatches_option | split: ',' %}

    {% comment %} Render | Product Variants & Swatches {% endcomment %}
    <div class="product-card__variants">
      <ul class="product-card__variants--list{% if variants_display_desktop == 'info' %} product-card__variants--list-info{% endif %}{% if variants_display_mobile == 'info' %} product-card__variants--list-info-mobile{% endif %}">
        {%- comment -%}digifist-note -- this part is a need max variant setting{%- endcomment -%}
        {%- for opts in (1..3) -%}
          {%- assign options = blank -%}
          {%- if opts == 1 -%}
            {%- assign options = product_ref.options_with_values[0] -%}
          {%- elsif opts == 2 -%}
            {%- assign options = product_ref.options_with_values[1] -%}
          {%- elsif opts == 3 -%}
            {%- assign options = product_ref.options_with_values[2] -%}
          {%- endif -%}
          {%- if options.values != blank -%}
            <li>

              {%- if variants_display_desktop == 'info' or variants_display_mobile == 'info' -%}
                {%- capture swatch_info_class -%}
                  {%- if variants_display_desktop == 'info' and variants_display_mobile != 'info'  -%}
                    small-hide
                  {%- elsif variants_display_mobile == 'info' and variants_display_desktop != 'info' -%}
                    small-up-hide
                  {%- endif -%}
                {%- endcapture -%}
                  <span {% unless swatch_info_class == blank %}class="{{- swatch_info_class -}}"{% endunless %} >
                    {{ options.values.size }} {{ product_ref.options_with_values[forloop.index0].name -}}
                  </span>
              {%- endif -%}

              {%- if options.values.size > 1 -%}
                {%- capture swatch_button_class -%}
                  {%- unless swatches_option_array contains options.name -%}
                    hidden-variant
                  {%- else -%}
                    {%- if variants_display_desktop != 'button' and variants_display_mobile == 'button' -%}
                      hidden-variant-desktop
                    {%- elsif variants_display_mobile != 'button' and variants_display_desktop == 'button' -%}
                      hidden-variant-mobile
                    {%- elsif variants_display_desktop != 'button' and variants_display_mobile != 'button' -%}
                      hidden-variant
                    {%- endif -%}
                  {%- endunless -%}
                {%- endcapture -%}

                <ul class="product-card__variants--option {{  swatch_button_class }}">
                  {%- for opt in options.values -%}

                    {% comment %} Product Swatch Check {% endcomment %}
                    {%- assign swatch_check = false -%}
                    {%- if settings.product_card_swatches_show -%}
                      {%- for option in current_swatch_options -%}
                        {%- if option == opt -%}
                          {%- assign swatch_check = opt | strip | handleize -%}
                          {%- unless color_codes contains swatch_check -%}
                            {%- assign swatch_check = 'default' -%}
                          {%- endunless -%}
                          {% break %}
                        {%- endif -%}
                      {%- endfor -%}
                    {%- endif -%}

                    {% comment %} Unique element ID for js actions {% endcomment %}
                    {%- assign section_id = section_id | default: '' -%}
                    {%- capture variant_id -%}
                      {{- section_id -}}{{- product_ref.id -}}-variant-option-{{- opts -}}-{{- forloop.index -}}-{{ block_index  }}
                    {%- endcapture -%}

                    {%- liquid
                      assign color_option_values = product_ref.options_by_name[settings.swatches_option].values
                      assign selected_variant = product_ref.selected_or_first_available_variant
                      assign selected_variant_color = blank

                      for option_value in selected_variant.options
                        if color_option_values contains option_value
                          assign selected_variant_color = option_value
                        endif
                      endfor

                      assign variant_is_checked = false
                      if selected_variant_color == opt
                        assign variant_is_checked = true
                      endif
                    -%}
                    <li class="button button--outlined button--small button--rounded{% if settings.button_border_radius == '0' %}-0{% endif %} button--variant{% if swatch_check %} button--swatch{% endif %}{% if settings.product_card_swatches_style_circle and swatch_check %} button--swatch-rounded{% endif %}{%- if variant_is_checked or swatch_check == false and forloop.first %} checked{%- endif -%}">
                      <input
                        type="radio"
                        name="{{ product_ref.id}}-option[{{ opts }}]"
                        id="{{ variant_id }}"
                        class="hidden variant-option-radio-input"
                        value="{{ opt }}"
                        {%- if variant_is_checked or swatch_check == false and forloop.first -%}checked{%- endif -%}
                      >
                      <label for="{{ variant_id }}"{% if swatch_check %} class="swatch--{{ swatch_check | handleize }}{% unless settings.product_card_swatches_style_circle %} rounded-0{% endunless %}"{% endif %} title="{{- swatch_check | capitalize -}}">
                        <span{% if swatch_check %} class="visually-hidden"{% endif %}>{{ opt }}</span>
                      </label>
                    </li>
                    {%- if forloop.index == variants_display_limit -%}
                      {%- assign more_variants_size = options.values.size | minus: variants_display_limit -%}
                      {%- unless more_variants_size == 0 -%}
                        <li class="product-card__variants--more">{{- "+" | append: more_variants_size -}}</li>
                      {%- endunless -%}
                      {%- break -%}
                    {%- endif -%}
                  {%- endfor -%}
                </ul>
              {%- endif -%}
            </li>
          {%- endif -%}
        {%- endfor -%}
      </ul>
    </div>
  {%- endif -%}

  <script data-product-variants-json type="application/json">
    {{- product_ref.variants | json -}}
  </script>
{%- endcapture -%}

{%- assign product_link_with_variant = product_ref.url | append: '?variant=' | append: product_ref.selected_or_first_available_variant.id -%}

{%- if search_product -%}
  {%- assign product_link_with_variant = product_ref.url -%}
{%- endif -%}

<product-card class="product-card{% if is_small %} product-card--small{% endif %}{% unless product_ref.available %} product-card__sold-out{% endunless %}">
  <div class="product-card__actions">
    <a href="{{ product_link_with_variant }}" tabindex="-1" class="product-card__link" data-product-link title="{{ 'product.go_to_title' | t : title: product_ref.title }}">
      {{ media }}
    </a>
    {% if is_small == false %}
      {{ add_to_cart }}
    {% endif %}
  </div>
  <div class="product-card__content">
    {%- liquid
      assign product_card_info_classes = 'product-card__info'
      if settings.product_card_badge_position == 'start'
        assign product_card_info_classes = product_card_info_classes | append: ' product-card__badge--on-start'
      endif
      if settings.product_card_price_position == 'inline'
        assign product_card_info_classes = product_card_info_classes | append: ' product-card__price--inline'
      endif
    -%}
    <div class="{{ product_card_info_classes }}">
      {%- if settings.show_product_card_vendor -%}
        <small class="product-card__vendor">{{ product_ref.vendor }}</small>
      {%- endif -%}
      <h3 class="product-card__title">
        <a href="{{ product_link_with_variant }}" class="product-card__link" tabindex="{% if is_in_drawer == true %}-1{% else %}0{% endif %}" data-product-link title="{{ 'product.go_to_title' | t : title: product_ref.title }}">
          <span>{{ product_ref.title | default: product_title_placeholder }}</span>
        </a>
        {% render 'product-badges', product: product_ref %}
      </h3>
      <span class="product-card__price">
        {%- unless settings.product_card_variants_hidden -%}
          {%- render 'price', product: product_ref, use_variant: true -%}
        {%- else -%}
          {%- render 'price', product: product_ref -%}
        {%- endunless -%}
      </span>
    </div>
    {% if is_small == false %}
      {{ product_variants }}
    {% endif %}
    {% if is_small == true %}
      {{ add_to_cart }}
    {% endif %}
  </div>
</product-card>
